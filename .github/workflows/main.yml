name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Qt
  # You may pin to the exact commit or the version.
  # uses: jurplel/install-qt-action@43ec12788e42f375acfcb2cec059edfb9572fbaa
      uses: jurplel/install-qt-action@v3.0.0
      with:
        dir: C:\Qt
        version: 6.4.1
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
    - name: Create deployment directory
      run: mkdir C:\AppDeploy
    - name: Copy files
      working-directory: C:\AppDeploy
      run: |
        cp ${{github.workspace}}/build/Release/diagonal-ui.exe .
        cp C:\Qt\mingw_64\bin\*.dll .
    - name: Create zipfile
      working-directory: C:\
      run: tar -a -c -f diagonal-ui.zip AppDeploy/*
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        # Artifact name
        name: diagonal-ui.zip
        # A file, directory or wildcard pattern that describes what to upload
        path: C:\diagonal-ui.zip

